@mixin font-size($min, $valVW, $max, $size) {
    font-size: ($size * 10px);
    font-size: ($size * 1rem);
    font-size: min(max(#{$min}, #{$valVW}), #{$max});
    font-size: clamp(#{$min}, #{$valVW}, #{$max});
}

@mixin fs-smallest {
    font-size: 15px;
    font-size: 1.5rem;
}

// @mixin fs-xs {
//     font-size: 15px;
//     font-size: 1.5rem;
// }

@mixin fs-sm {
    font-size: 20px;
    font-size: 2rem;
}

@mixin fs-md {
    font-size: 25px;
    font-size: 2.5rem;
}

@mixin fs-lg {
    font-size: 30px;
    font-size: 3rem;
}

@mixin fs-xl {
    font-size: 40px;
    font-size: 4rem;
}

@mixin fs-xl-clamp {
    font-size: 40px;
    font-size: 4rem;
    font-size: min(max(32px, 2.32vw), 50px);
    font-size: clamp(32px, 2.32vw, 50px);
}

@mixin fs-xxl {
    font-size: 75px;
    font-size: 7.5rem;
}

@mixin fs-xxl-clamp {
    font-size: 60px;
    font-size: 6rem;
    font-size: min(max(30px, 3.475vw), 80px);
    font-size: clamp(30px, 3.475vw, 80px);
}

@mixin fs-xxxl {
    font-size: 110px;
    font-size: 11rem;
}

@mixin fs-xxxl-clamp {
    font-size: 110px;
    font-size: 11rem;
    font-size: min(max(75px, 7.276vw), 180px);
    font-size: clamp(75px, 7.276vw, 180px);
    font-size: min(max(7.5rem, 7.276vw), 15rem);
    font-size: clamp(7.5rem, 7.276vw, 15rem);
}

@mixin fs-biggest {
    font-size: 300px;
    font-size: 30rem;
    }

@mixin fs-biggest-clamp {
    font-size: 450px;
    font-size: 45rem;
    font-size: min(max(40px, 19.842vw), 450px);
    font-size: clamp(40px, 19.842vw, 450px);
    font-size: min(max(4em, 19.842vw), 45em);
    font-size: clamp(4em, 19.842vw, 45em);

    // @media (max-width: $sm){
    //     @include fs-xl;
    // }
}

@mixin object-cover {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
}

@mixin clean-list {
    margin: 0;
    padding: 0;
    list-style-type: none;
}

@mixin transition($properties: all, $duration: .3s, $timing-function: ease-in-out){
    transition: $properties $duration $timing-function;
}

@mixin underlink {
    position: relative;
    display: inline-block;

    &:after {
        content: "";
        position: absolute;
        display: block;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 1px;
        border-radius: 1px;
        background-color: currentColor;
        transform-origin: right center;
        transform: scaleX(0) translate3d(0, 0, 0);
        transition: transform .2s ease-in-out;
    }

    &:hover {
        &:after {
            transform: scaleX(1) translate3d(0, 0, 0);
            transform-origin: left center;
        }
    }
}

@mixin btn {
    --color: #{$black};
    --bg-color: #{$white};
    --bg-shadow: #{$yellow};
    position: relative;
    display: inline-block;
    padding: 0;
    background: none;
    border: none;
    @include fs-lg;
    cursor: pointer;

    span {
        position: relative;
        display: inline-block;
        width: 100%;
        height: 100%;
        padding: .5em 2em;
        color: var(--color);
        background-color: var(--bg-color);
        border: 4px solid var(--color);
        border-radius: .33em;
        text-decoration: none;
        transform: translate3d(0, 0, 0);
        transition: background-color .15s cubic-bezier(.68,-0.55,.27,1.55) .2s, transform .35s cubic-bezier(.68,-0.55,.27,1.55);
        z-index: 1;
    }

    &--big {
        @include fs-xl;
    }
    
    &--uppercase {
        text-transform: uppercase;
    }

    &:after {
        content: "";
        position: absolute;
        display: block;
        top: 0;
        left: 0;
        width: calc(100% - 8px);
        height: calc(100% - 8px);
        border: 4px solid var(--color);
        border-radius: .33em;
        background-color: var(--bg-shadow);
        transition: all 0s ease-out .2s;
        opacity: 0;
        // z-index: -1;
    }

    &:hover,
    &:focus {
        span {
            background-color: $white;
            transform: translate3d(-.65em, -.65em, 0);
            transition: background-color .15s cubic-bezier(.68,-0.55,.27,1.55), transform .35s cubic-bezier(.68,-0.55,.27,1.55);
        }
        

        &:after {
            // background-color: $yellow;
            opacity: 1;
            // transform: translate3d(.15em, .15em, 0);
            transition: all .35s cubic-bezier(.68,-0.55,.27,1.55);
        }
    }

    &--is-light {
        --color: #{$white};
        span {
            
        }

        &:hover {
            span {
                background-color: $black;
            }
        }
    }

    @media (max-width: $lg){
        @include fs-md;
    }

    @media (max-width: $sm){
        // width: 100%;

        span {
            padding: .5em 1.5em;
        }
    }
}